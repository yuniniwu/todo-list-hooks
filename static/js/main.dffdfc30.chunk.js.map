{"version":3,"sources":["constants/style.js","components/TodoItem.js","constants/filterButton.js","components/FilterButton.js","redux/selectors.js","redux/actionTypes.js","useTodo.js","redux/actions.js","TodoListApp.js","redux/reducers/todos.js","redux/reducers/filter.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["GlobalStyle","createGlobalStyle","MEDIA_QUERY_S","ListItem","styled","li","props","theme","colors","font_main","TodoContent","p","$isDone","EditContent","input","Button","button","btn_main","font_white","ButtonGroup","div","ButtonDelete","bg_danger","btn_danger","ButtonDone","bg_safe","ButtonTodo","bg_notice","TodoItem","todo","handleDeleteItem","handleToggleIsDone","handleEditTodo","id","content","isDone","useState","toggle","setToggle","text","setText","handleTogglerClick","data-id","onDoubleClick","type","value","onChange","e","newContent","target","onKeyDown","key","preventDefault","stopPropagation","onClick","VISIBILITY_FILTERS","ALL","COMPLETED","INCOMPLETED","ButtonFilter","FilterButton","handleFilter","Object","keys","map","filterType","currentFilter","selectTodos","store","todosReducer","todos","getTodosByFilter","visibilityFilter","filter","ADD_TODO","DELETE_TODO","TOGGLE_TODO","CLEAR_COMPLETED","EDIT_TODO","FILTER_TODO","useTodo","inputValue","setInputValue","useSelector","filterValue","dispatch","useDispatch","todoCounter","useMemo","length","handleTodoCounter","useEffect","window","localStorage","setItem","JSON","stringify","saveTodosToLocalStorage","handleAddItem","useCallback","payload","deleteTodo","handleClearCompletedItem","toggleTodo","editTodo","selectedFilter","innerText","handleInputChange","Container","bg_card","bg_main","Heading","h1","Card","InputArea","TextInput","shadow","ButtonClear","ListGroup","ul","Footer","TodoListApp","placeholder","console","log","todoId","localData","getItem","parse","initialState","state","action","combineReducers","createStore","rootReducer","ReactDOM","render","btn_save","document","getElementById"],"mappings":"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","file":"static/js/main.dffdfc30.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n/*\n  CSS reset \n  http://meyerweb.com/eric/tools/css/reset/ \n  v2.0 | 20110126\n  License: none (public domain)\n*/\n  html,\n  body,\n  div,\n  span,\n  applet,\n  object,\n  iframe,\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n  p,\n  blockquote,\n  pre,\n  a,\n  abbr,\n  acronym,\n  address,\n  big,\n  cite,\n  code,\n  del,\n  dfn,\n  em,\n  img,\n  ins,\n  kbd,\n  q,\n  s,\n  samp,\n  small,\n  strike,\n  strong,\n  sub,\n  sup,\n  tt,\n  var,\n  b,\n  u,\n  i,\n  center,\n  dl,\n  dt,\n  dd,\n  ol,\n  ul,\n  li,\n  fieldset,\n  form,\n  label,\n  legend,\n  table,\n  caption,\n  tbody,\n  tfoot,\n  thead,\n  tr,\n  th,\n  td,\n  article,\n  aside,\n  canvas,\n  details,\n  embed,\n  figure,\n  figcaption,\n  footer,\n  header,\n  hgroup,\n  menu,\n  nav,\n  output,\n  ruby,\n  section,\n  summary,\n  time,\n  mark,\n  audio,\n  video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n  }\n  /* HTML5 display-role reset for older browsers */\n  article,\n  aside,\n  details,\n  figcaption,\n  figure,\n  footer,\n  header,\n  hgroup,\n  menu,\n  nav,\n  section {\n    display: block;\n  }\n  body {\n    line-height: 1;\n  }\n  ol,\n  ul {\n    list-style: none;\n  }\n  blockquote,\n  q {\n    quotes: none;\n  }\n  blockquote:before,\n  blockquote:after,\n  q:before,\n  q:after {\n    content: '';\n    content: none;\n  }\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n  \n`;\n\nexport const MEDIA_QUERY_S = '@media screen and (max-width: 320px)';\nexport const MEDIA_QUERY_MD = '@media screen and (max-width: 768px)';\n\nexport const theme = {\n  colors: {\n    bg_main: '#fff',\n    bg_card: '#eeede7',\n    bg_danger: '#e7d2cc',\n    bg_safe: '#738580',\n    bg_notice: '#e5d7be',\n    font_white: '#fff',\n    font_main: '#5a5a5a',\n    shadow: '#ced4da',\n    btn_main: '#868b8e',\n    btn_danger: '#c44b4f',\n    btn_save: '#746c70',\n  },\n};\n","import styled from 'styled-components';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst ListItem = styled.li`\n  list-style: none;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  & + & {\n    border-top: 1px solid ${(props) => props.theme.colors.font_main};\n  }\n`;\n\nconst TodoContent = styled.p`\n  ${(props) =>\n    props.$isDone &&\n    `\n    text-decoration: line-through black solid 0.15rem;\n  `}\n`;\n\nconst EditContent = styled.input`\n  border: none;\n  font-size: 1rem;\n  line-height: 1.5;\n  padding: 0.2rem 0.4rem;\n  color: ${(props) => props.theme.colors.font_main};\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst Button = styled.button`\n  display: inline-block;\n  width: 100%;\n  text-align: center;\n  padding: 0.375rem 0.75rem;\n  margin: 0.2rem;\n  font-size: 1rem;\n  border: none;\n  border-radius: 0.4rem;\n  background-color: ${(props) => props.theme.colors.btn_main};\n  color: ${(props) => props.theme.colors.font_white};\n  cursor: pointer;\n  transition: all 0.5s;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nconst ButtonGroup = styled.div`\n  margin: 0.2rem 0;\n  display: inline-flex;\n`;\n\nconst ButtonDelete = styled(Button)`\n  background-color: ${(props) => props.theme.colors.bg_danger};\n  color: ${(props) => props.theme.colors.btn_danger};\n  font-weight: 900;\n  width: 3rem;\n  height: 2rem;\n  padding: 0.2rem 0.4rem;\n  font-size: 0.7rem;\n`;\n\nconst ButtonDone = styled(Button)`\n  background-color: ${(props) => props.theme.colors.bg_safe};\n  width: 3rem;\n  height: 2rem;\n  padding: 0.1rem 0.2rem;\n  font-size: 0.7rem;\n`;\n\nconst ButtonTodo = styled(ButtonDelete)`\n  background-color: ${(props) => props.theme.colors.bg_notice};\n  padding: 0.1rem 0.2rem;\n`;\n\nexport default function TodoItem({\n  todo,\n  handleDeleteItem,\n  handleToggleIsDone,\n  handleEditTodo,\n}) {\n  const { id, content, isDone } = todo;\n  const [toggle, setToggle] = useState(true);\n  const [text, setText] = useState(content);\n\n  const handleDeleteClick = () => {\n    handleDeleteItem(id);\n  };\n\n  const handleTogglerClick = () => {\n    handleToggleIsDone(id);\n  };\n\n  const handleTodoEdit = (e) => {\n    const newContent = e.target.value;\n    handleEditTodo(newContent, id);\n    setText(newContent);\n  };\n\n  return (\n    <ListItem data-id={id}>\n      {toggle ? (\n        <TodoContent\n          $isDone={isDone}\n          onDoubleClick={() => {\n            setToggle(false);\n          }}\n        >\n          {content}\n        </TodoContent>\n      ) : (\n        <EditContent\n          type='text'\n          value={text}\n          onChange={handleTodoEdit}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter' || e.key === 'Escape') {\n              setToggle(true);\n              e.preventDefault();\n              e.stopPropagation();\n            }\n          }}\n        />\n      )}\n\n      <ButtonGroup>\n        {isDone ? (\n          <ButtonTodo onClick={handleTogglerClick}>未完成</ButtonTodo>\n        ) : (\n          <ButtonDone onClick={handleTogglerClick}>已完成</ButtonDone>\n        )}\n        <ButtonDelete onClick={handleDeleteClick}>刪除</ButtonDelete>\n      </ButtonGroup>\n    </ListItem>\n  );\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired,\n  handleDeleteItem: PropTypes.func.isRequired,\n  handleToggleIsDone: PropTypes.func.isRequired,\n  handleEditTodo: PropTypes.func.isRequired,\n};\n","export const VISIBILITY_FILTERS = {\n  ALL: 'All',\n  COMPLETED: 'Done',\n  INCOMPLETED: 'to Do',\n};\n","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { VISIBILITY_FILTERS } from '../constants/filterButton';\n\nconst ButtonGroup = styled.div`\n  margin: 0.2rem 0;\n  display: inline-flex;\n`;\n\nconst Button = styled.button`\n  display: inline-block;\n  width: 100%;\n  text-align: center;\n  padding: 0.375rem 0.75rem;\n  margin: 0.2rem;\n  font-size: 1rem;\n  border: none;\n  border-radius: 0.4rem;\n  background-color: ${(props) => props.theme.colors.btn_main};\n  color: ${(props) => props.theme.colors.font_white};\n  cursor: pointer;\n  transition: all 0.5s;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nconst ButtonFilter = styled(Button)`\n  font-size: 0.8rem;\n  padding: 0.2rem 0.4rem;\n`;\n\nexport default function FilterButton({ handleFilter }) {\n  return (\n    <ButtonGroup>\n      {Object.keys(VISIBILITY_FILTERS).map((filterType) => {\n        const currentFilter = VISIBILITY_FILTERS[filterType];\n        return (\n          <ButtonFilter key={currentFilter} onClick={handleFilter}>\n            {currentFilter}\n          </ButtonFilter>\n        );\n      })}\n    </ButtonGroup>\n  );\n}\n\nFilterButton.propTypes = {\n  handleFilter: PropTypes.func.isRequired,\n};\n","import { VISIBILITY_FILTERS } from '../constants/filterButton.js';\n\nexport const selectTodos = (store) => store.todosReducer.todos;\n\nexport const getTodosByFilter = (store) => {\n  const todos = store.todosReducer.todos;\n\n  switch (store.visibilityFilter) {\n    case VISIBILITY_FILTERS.COMPLETED:\n      return todos.filter((todo) => todo.isDone);\n\n    case VISIBILITY_FILTERS.INCOMPLETED:\n      return todos.filter((todo) => !todo.isDone);\n\n    case VISIBILITY_FILTERS.ALL:\n    default:\n      return todos;\n  }\n};\n","export const ADD_TODO = 'add_todo';\nexport const DELETE_TODO = 'delete_todo';\nexport const TOGGLE_TODO = 'toggle_todo';\nexport const CLEAR_COMPLETED = 'clear_completed';\nexport const EDIT_TODO = 'edit_todo';\nexport const FILTER_TODO = 'filter_todo';\n","import { useState, useEffect, useCallback, useMemo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectTodos, getTodosByFilter } from './redux/selectors';\nimport {\n  addTodo,\n  deleteTodo,\n  toggleTodo,\n  clearCompleted,\n  editTodo,\n  filterTodo,\n} from './redux/actions';\n\nconst saveTodosToLocalStorage = (todos) => {\n  window.localStorage.setItem('todos', JSON.stringify(todos));\n};\n\nconst handleTodoCounter = (todos) => {\n  return todos.filter((todo) => !todo.isDone).length;\n};\n\nexport default function useTodo() {\n  // const [todos, setTodos] = useState(() => {\n  //   let todoData = localData || '';\n  //   if (todoData) {\n  //     todoData = JSON.parse(todoData);\n  //   } else {\n  //     todoData = [];\n  //   }\n  //   return todoData;\n  // });\n  const [inputValue, setInputValue] = useState('');\n  const todos = useSelector(selectTodos);\n  const filterValue = useSelector(getTodosByFilter);\n  const dispatch = useDispatch();\n  // const [filterValue, setFilterValue] = useState(todos);\n  // const filterType = ['All', 'Done', 'to Do'];\n\n  // 計算未完成 todo item數量\n  const todoCounter = useMemo(() => handleTodoCounter(todos), [todos]);\n\n  useEffect(() => {\n    saveTodosToLocalStorage(todos);\n    // setFilterValue(todos);\n  }, [todos]);\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleAddItem = useCallback(() => {\n    if (!inputValue) return;\n    dispatch(addTodo(inputValue));\n    setInputValue('');\n  }, [inputValue, dispatch]);\n\n  const handleDeleteItem = useCallback(\n    (id) => {\n      dispatch(deleteTodo(id));\n    },\n    [dispatch]\n  );\n\n  const handleClearCompletedItem = useCallback(() => {\n    dispatch(clearCompleted());\n  }, [dispatch]);\n\n  const handleToggleIsDone = useCallback(\n    (id) => {\n      dispatch(toggleTodo(id));\n    },\n    [dispatch]\n  );\n\n  const handleEditTodo = useCallback(\n    (id, content) => {\n      dispatch(editTodo(id, content));\n    },\n    [dispatch]\n  );\n\n  const handleFilter = useCallback(\n    (e) => {\n      const selectedFilter = e.target.innerText;\n      dispatch(filterTodo(selectedFilter));\n    },\n    [dispatch]\n  );\n\n  return {\n    inputValue,\n    filterValue,\n    todoCounter,\n    handleEditTodo,\n    handleFilter,\n    handleAddItem,\n    handleInputChange,\n    handleDeleteItem,\n    handleToggleIsDone,\n    handleClearCompletedItem,\n  };\n}\n","import {\n  ADD_TODO,\n  DELETE_TODO,\n  TOGGLE_TODO,\n  CLEAR_COMPLETED,\n  EDIT_TODO,\n  FILTER_TODO,\n} from './actionTypes';\n\nexport const addTodo = (content) => ({\n  type: ADD_TODO,\n  payload: {\n    content,\n  },\n});\n\nexport const deleteTodo = (id) => ({\n  type: DELETE_TODO,\n  payload: {\n    id,\n  },\n});\n\nexport const toggleTodo = (id) => ({\n  type: TOGGLE_TODO,\n  payload: {\n    id,\n  },\n});\n\n// TODO: check\nexport const clearCompleted = (id) => ({\n  type: CLEAR_COMPLETED,\n  payload: { id },\n});\n\nexport const editTodo = (id, content) => ({\n  type: EDIT_TODO,\n  payload: {\n    id,\n    content,\n  },\n});\n\nexport const filterTodo = (filter) => ({\n  type: FILTER_TODO,\n  payload: {\n    filter,\n  },\n});\n","import styled from 'styled-components';\nimport { MEDIA_QUERY_S } from './constants/style.js';\nimport TodoItem from './components/TodoItem';\nimport FilterButton from './components/FilterButton';\nimport useTodo from './useTodo';\nimport PropTypes from 'prop-types';\n\nconst Container = styled.div`\n  ${MEDIA_QUERY_S} {\n    background-color: ${(props) => props.theme.colors.bg_card};\n  }\n\n  background-color: ${(props) => props.theme.colors.bg_main};\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  align-items: center;\n  padding-right: 15px;\n  padding-left: 15px;\n  margin: 0 auto;\n`;\n\nconst Heading = styled.h1`\n  font-size: 2rem;\n  font-weight: bold;\n  margin: 1rem;\n`;\n\nconst Card = styled.div`\n  background-color: ${(props) => props.theme.colors.bg_card};\n  display: flex;\n  flex-direction: column;\n  box-shadow: 2px 5px 7px #b9b7bd;\n  border-radius: 0.4rem;\n  word-wrap: break-word;\n  text-align: center;\n  padding: 1rem 3rem;\n\n  ${MEDIA_QUERY_S} {\n    box-shadow: none;\n  }\n`;\n\nconst InputArea = styled.div`\n  display: flex;\n  margin-top: 1rem;\n`;\n\nconst TextInput = styled.input`\n  display: block;\n  height: calc(1.5em + 0.75rem + 2px);\n  padding: 0.375rem 0.75rem;\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.5;\n  color: ${(props) => props.theme.colors.font_main};\n  background-color: ${(props) => props.theme.colors.bg_main};\n  background-clip: padding-box;\n  border: 1px solid ${(props) => props.theme.colors.shadow};\n  border-radius: 0.4rem;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst Button = styled.button`\n  display: inline-block;\n  width: 100%;\n  text-align: center;\n  padding: 0.375rem 0.75rem;\n  margin: 0.2rem;\n  font-size: 1rem;\n  border: none;\n  border-radius: 0.4rem;\n  background-color: ${(props) => props.theme.colors.btn_main};\n  color: ${(props) => props.theme.colors.font_white};\n  cursor: pointer;\n  transition: all 0.5s;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nconst ButtonClear = styled(Button)`\n  background-color: ${(props) => props.theme.colors.bg_danger};\n  color: ${(props) => props.theme.colors.btn_danger};\n  width: 4rem;\n  height: 2rem;\n  padding: 0.1rem 0.2rem;\n  font-size: 0.7rem;\n`;\n\nconst ListGroup = styled.ul`\n  margin: 0 5px;\n  padding-inline-start: 0px;\n`;\n\nconst Footer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-left: 0.3rem;\n`;\n\nexport default function TodoListApp() {\n  const {\n    inputValue,\n    filterValue,\n    filterType,\n    todoCounter,\n    handleFilter,\n    handleAddItem,\n    handleInputChange,\n    handleDeleteItem,\n    handleToggleIsDone,\n    handleClearCompletedItem,\n    handleEditTodo,\n  } = useTodo();\n\n  return (\n    <Container>\n      <Heading>Todo List</Heading>\n      <Card>\n        <InputArea>\n          <TextInput\n            placeholder='enter your todo item'\n            onChange={handleInputChange}\n            value={inputValue}\n          ></TextInput>\n          <Button onClick={handleAddItem}>新增</Button>\n        </InputArea>\n        <FilterButton handleFilter={handleFilter} value={filterType} />\n\n        <ListGroup>\n          {console.log(filterValue.length)}\n          {filterValue.map((todo) => (\n            <TodoItem\n              key={todo.id}\n              todo={todo}\n              handleDeleteItem={handleDeleteItem}\n              handleToggleIsDone={handleToggleIsDone}\n              handleEditTodo={handleEditTodo}\n            />\n          ))}\n        </ListGroup>\n\n        <Footer>\n          {todoCounter} items left\n          <ButtonClear onClick={handleClearCompletedItem}>Clear</ButtonClear>\n        </Footer>\n      </Card>\n    </Container>\n  );\n}\n\nTodoListApp.propTypes = {\n  inputValue: PropTypes.array,\n  filterValue: PropTypes.array,\n  filterType: PropTypes.array,\n  todoCounter: PropTypes.array,\n  handleFilter: PropTypes.func,\n  handleAddItem: PropTypes.func,\n  handleInputChange: PropTypes.func,\n  handleDeleteItem: PropTypes.func,\n  handleToggleIsDone: PropTypes.func,\n  handleClearCompletedItem: PropTypes.func,\n  handleEditTodo: PropTypes.func,\n};\n","import {\n  ADD_TODO,\n  DELETE_TODO,\n  TOGGLE_TODO,\n  CLEAR_COMPLETED,\n  EDIT_TODO,\n} from '../actionTypes';\n\nconst localData = window.localStorage.getItem('todos');\n\nlet todos = JSON.parse(localData) || [];\n\nlet todoId;\nif (todos.length === 0) {\n  todoId = 0;\n} else {\n  todoId = todos[todos.length - 1].id + 1;\n}\n\nconst initialState = { todos };\n\nexport default function todosReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_TODO: {\n      return {\n        ...state,\n        todos: [\n          ...state.todos,\n          {\n            id: todoId++,\n            content: action.payload.content,\n            isDone: false,\n          },\n        ],\n      };\n    }\n    case DELETE_TODO: {\n      return {\n        ...state,\n        todos: state.todos.filter((todo) => todo.id !== action.payload.id),\n      };\n    }\n    case TOGGLE_TODO: {\n      return {\n        ...state,\n        todos: state.todos.map((todo) => {\n          if (todo.id !== action.payload.id) return todo;\n          return {\n            ...todo,\n            isDone: !todo.isDone,\n          };\n        }),\n      };\n    }\n    case EDIT_TODO: {\n      return {\n        ...state,\n        todos: state.todos.map((todo) => {\n          if (todo.id !== action.payload.id) return todo;\n          return {\n            ...todo,\n            content: action.payload.content,\n          };\n        }),\n      };\n    }\n    case CLEAR_COMPLETED: {\n      return {\n        ...state,\n        todos: state.todos.filter((todo) => !todo.isDone),\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { FILTER_TODO } from '../actionTypes';\nimport { VISIBILITY_FILTERS } from '../../constants/filterButton';\n\nconst initialState = VISIBILITY_FILTERS.ALL;\n\nconst visibilityFilter = (state = initialState, action) => {\n  switch (action.type) {\n    case FILTER_TODO: {\n      return action.payload.filter;\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default visibilityFilter;\n","import { combineReducers } from 'redux';\nimport todosReducer from './todos';\nimport visibilityFilter from './filter';\n\nexport default combineReducers({\n  todosReducer,\n  visibilityFilter,\n});\n","import { createStore } from 'redux';\nimport rootReducer from './reducers';\n\nexport const store = createStore(rootReducer);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport TodoListApp from './TodoListApp';\nimport { ThemeProvider } from 'styled-components';\nimport { theme, GlobalStyle } from './constants/style.js';\nimport { store } from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <TodoListApp />\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}